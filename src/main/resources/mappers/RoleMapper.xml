<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ieps.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.ieps.pojo.Role">
        <!--<constructor >-->
        <!--<idArg column="role_id" jdbcType="INTEGER" javaType="java.lang.Integer" />-->
        <!--<arg column="role_name" jdbcType="VARCHAR" javaType="java.lang.String" />-->
        <!--<arg column="role_desc" jdbcType="VARCHAR" javaType="java.lang.String" />-->
        <!--<arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />-->
        <!--<arg column="update_time" jdbcType="TIMESTAMP" javaType="java.util.Date" />-->
        <!--</constructor>-->
        <id column="role_id" property="roleId"/>
        <result column="role_name" property="roleName"/>
        <result column="role_desc" property="roleDesc"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    role_id, role_name, role_desc, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ieps_role
        where role_id = #{roleId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ieps_role
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.ieps.pojo.Role">
    insert into ieps_role (role_id, role_name, role_desc, 
      create_time, update_time)
    values (#{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, 
      now(), now())
  </insert>
    <insert id="insertSelective" parameterType="com.ieps.pojo.Role">
        insert into ieps_role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                role_id,
            </if>
            <if test="roleName != null">
                role_name,
            </if>
            <if test="roleDesc != null">
                role_desc,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roleId != null">
                #{roleId,jdbcType=INTEGER},
            </if>
            <if test="roleName != null">
                #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="updateTime != null">
                now(),
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ieps.pojo.Role">
        update ieps_role
        <set>
            <if test="roleName != null">
                role_name = #{roleName,jdbcType=VARCHAR},
            </if>
            <if test="roleDesc != null">
                role_desc = #{roleDesc,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = now(),
            </if>
        </set>
        where role_id = #{roleId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ieps.pojo.Role">
    update ieps_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = now()
    where role_id = #{roleId,jdbcType=INTEGER}
  </update>

    <select id="selectAllRoleWithRoleAdminId" resultType="Role">
        SELECT role_id AS roleId, role_name AS roleName, create_time AS createTime, update_time AS updateTime
        FROM ieps_role
        WHERE role_id &lt;  #{roleAdminId}
    </select>

    <delete id="batchDeleteRoleWithRoleIds">
        DELETE ieps_role
        WHERE role_id IN 
        <foreach collection="array" item="roleId" separator="," open="(" close=")">
            #{roleId}
        </foreach>
    </delete>

    <select id="selectRoleIdWithRoleIdByAdmin" parameterType="integer" resultType="Role">
      SELECT role_id AS roleId, role_name AS roleName
      FROM ieps_role
      WHERE role_id &lt; #{roleId}
    </select>

</mapper>